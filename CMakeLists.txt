cmake_minimum_required(VERSION 3.10)
project(Coroutine)

set(CMAKE_CXX_STANDARD 14)
find_package(Threads)
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
#SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pg")
#SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pg")
#set(CMAKE_CXX_FLAGS -fsanitize=address)
#set(CMAKE_CXX_FLAGS -fsanitize-recover=address)
#add_executable(Coroutine main.cpp Coroutine.cpp Coroutine.h async.cpp async.h aio.cpp aio.h unit/array_buf.cpp unit/array_buf.h log.cpp log.h poll.cpp poll.h aThread.cpp aThread.h)
add_library(Coroutine SHARED Coroutine.cpp Coroutine.h async.cpp async.h aio.cpp aio.h unit/array_buf.cpp unit/array_buf.h log.cpp log.h poll.cpp poll.h aThread.cpp aThread.h coro.h unit/func.h)
add_executable(Coroutine_bin  Coroutine.cpp Coroutine.h async.cpp async.h aio.cpp aio.h unit/array_buf.cpp unit/array_buf.h log.cpp log.h poll.cpp poll.h aThread.cpp aThread.h coro.h main.cpp)
target_link_libraries(Coroutine ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(Coroutine_bin ${CMAKE_THREAD_LIBS_INIT})
